import { save, load, getSaves } from '../src/save.js';
import { player } from './Player.js';
import cities from './Cities.js';
import Prompt from './Prompt.js';
import Troubadour from 'troubadour';
import equip from './equipment.js';

const troubadour = new Troubadour('sox');

//const troubadour = new Troubadour('sox');

// troubadour.on('start', () => {
//   console.log('Music is playing...');
// });

// troubadour.on('end', () => {
//   console.log('Music stopped...');
// });


const city = cities[player.getPlayerLocation()];

const cityTitles = city.buildings.titles;
const cityValues = city.buildings.values;
const cityDescriptions = city.buildings.descriptions;

// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∏–≥—Ä—ã

export let game = {
  isEnded: false,
  name: null,
  difficulty: 'normal',
  player: {
    coins: 100,
  },
};

export const configs = {

  // ---------- –ü–†–û–ú–ü–¢–´ –î–õ–Ø –ú–ï–ù–Æ ----------

  menu: () => {
    //troubadour.play('sounds/menu.mp3');
    return new Prompt(
      '‚ò∞',
      ['üéÆ –ù–æ–≤–∞—è –∏–≥—Ä–∞', 'üîÉ –ó–∞–≥—Ä—É–∑–∏—Ç—å', 'üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å', 'ü™õ  –ù–∞—Å—Ç—Ä–æ–π–∫–∏', 'ü™ü  –í—ã–π—Ç–∏'],
      ['samsanCity', 'savesList', 'saveGame', 'settings', 'endGame'],
      [],
      (val) => {
        //troubadour.stop();
        if (val === 'endGame') game.isEnded = true;
        console.clear();
        return val;
      },
    );
  },

  savesList: async () => {
    const saves = await getSaves();
    const titles = [...saves];
    const values = [...saves];
    titles.push('–ù–∞–∑–∞–¥');
    return new Prompt(
      '–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ',
      titles,
      values,
      [],
      async (saveName) => {
        if (!saveName) return 'menu';
        game = await load(saveName);
        return 'startGame';
      },
    );
  },

  saveGame: () => {
    troubadour.play('sounds/save.mp3');
    return {
      type: 'text',
      name: 'value',
      message: '–ö–∞–∫ –æ–±–∑–æ–≤–µ–º —Ç–µ–±—è, —Å–∞–ª–∞–≥–∞? (—Ä–µ—á—å –æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏)',
      format: async (saveName) => {
        save(game, saveName);
        console.log('‚ùó –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–ø–æ–ª–∑–ª–æ –ø–æ–¥ —à–∫–æ–Ω–∫—É –≤ saves, –Ω–∞—á–∞–ª—å–Ω–∏–∫');
        return 'menu';
      },
    };
  },

  settings: () => {
    return new Prompt(
      '',
      ['–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏', '–ù–∞–∑–∞–¥'],
      ['difficulty', 'menu'],
    );
  },

  difficulty: () => {
    return new Prompt(
      '–í—ã–±–µ—Ä–∏—Ç–µ —Å–ª–æ–∂–Ω–æ—Å—Ç—å',
      ['–õ–µ–≥–∫–∏–π', '–ù–æ—Ä–º–∞–ª—å–Ω—ã–π', '–°–ª–æ–∂–Ω—ã–π', '–ù–∞–∑–∞–¥'],
      ['easy', 'normal', 'hard', 'settings'],
      ['–î–ª—è —Å–ª–∞–±—ã—Ö –ª—é–¥–µ–π', '–û—á–µ—Ä–µ–¥–Ω—è—Ä—Å–∫–∏–π —É—Ä–æ–≤–µ–Ω—å', '–°–∞–º—ã–π –∫—Ä—É—Ç–æ–π —á—Ç–æ –ª–∏?'],
      (val) => {
        console.log(val);
        if (val !== 'settings') game.difficulty = val;
        return 'settings';
      }
    );
  },
  // ---------- –ü–†–û–ú–ü–¢–´ –î–õ–Ø –ú–ï–ù–Æ ----------

  // menu -> –ù–æ–≤–∞—è –∏–≥—Ä–∞ -> samsanCity
  samsanCity: () => {
    troubadour.play('sounds/birds.wav');
    console.log(`–í—ã –∑–∞—à–ª–∏ –≤ –≥–æ—Ä–æ–¥ ${player.getPlayerLocation()}.`);
    return new Prompt(
      '–í—ã–±–µ—Ä–∏—Ç–µ, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–π—Ç–∏: ',
      cityTitles,
      cityValues,
      cityDescriptions,
    );
  },
  
  // ---------- –ü–†–û–ú–ü–¢–´ –î–õ–Ø –ú–ï–ù–Æ –≠–ö–ò–ü–ò–†–û–í–ö–ò –ü–†–ï–î–ú–ï–¢–û–í ----------

  equipment: () => {
    return new Prompt(
      '–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ',
      ['–ù–∞–¥–µ—Ç—å —Å–Ω–∞—Ä—è–∂–µ–Ω–∏—è', '–°–Ω—è—Ç—å —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ', '–í–µ—Ä–Ω—É—Ç—Å—è'],
      ['equip', 'unequip','backwards'],
      ['–í—ã–±—Ä–∞—Ç—å —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è','–°–Ω—è—Ç—å –Ω–∞–¥–µ—Ç–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ','–í–µ—Ä–Ω—É—Ç—Å—è –≤ –≥–æ—Ä–æ–¥'],
    );
  },

  equip: () => {
    const titles = equip.getAmmunitionName(player);
    const values = equip.getAmmunitionType(player);
    const description = equip.getAmmunitionDescription(player);

    console.log(titles);
    console.log(values);
    console.log(description);
    return new Prompt(
      '–í—ã–±–µ—Ä–∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ',
      [...titles.flat()],
      [...values.flat()],
      [...description.flat()],
    );
  },

  unequip: () => {
      const titles = equip.getEquipAmunitionName(player);
      const values = equip.getEquipAmmunitionType(player);
      const description = equip.getEquipAmmunitionDescription(player);
    return new Prompt(
      '–í—ã–±–µ—Ä–∏ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏',
      [...titles.flat()],
      [...values.flat()],
      [...description.flat()]
    );
  },

    // ---------- –ü–†–û–ú–ü–¢–´ –î–õ–Ø –î–ï–ô–°–¢–í–ò–ô –í –ì–û–†–û–î–ï ----------

  samsanCity: () => {
    troubadour.play('sounds/birds.wav');
    console.log(`–í—ã –∑–∞—à–ª–∏ –≤ –≥–æ—Ä–æ–¥ ${player.getPlayerLocation()}.`);
    return new Prompt(
      '–í—ã–±–µ—Ä–∏—Ç–µ, –∫—É–¥–∞ —Ö–æ—Ç–∏—Ç–µ –ø–æ–π—Ç–∏: ',
      cityTitles,
      cityValues,
      cityDescriptions,
    );
  },

  townhallActions: () => {
    console.log('–í—ã –∑–∞—à–ª–∏ –≤ –≥–æ—Ä–æ–¥—Å–∫—É—é —Ä–∞—Ç—É—à—É.\n');
    return new Prompt('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', 
    city.getSamsanBuilding('–†–∞—Ç—É—à–∞', 'titles'),
    city.getSamsanBuilding('–†–∞—Ç—É—à–∞', 'values'),
    city.getSamsanBuilding('–†–∞—Ç—É—à–∞', 'descriptions'));
  },

  tavernActions: () => {
    console.log('–í—ã –∑–∞—à–ª–∏ –≤ —Ç–∞–≤–µ—Ä–Ω—É.\n');
    return new Prompt('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', 
    city.getSamsanBuilding('–¢–∞–≤–µ—Ä–Ω–∞', 'titles'),
    city.getSamsanBuilding('–¢–∞–≤–µ—Ä–Ω–∞', 'values'),
    city.getSamsanBuilding('–¢–∞–≤–µ—Ä–Ω–∞', 'descriptions'));
  },

  marketActions: () => {
    console.log('–í—ã –ø–æ–ø–∞–ª–∏ –Ω–∞ —Ä—ã–Ω–æ–∫.\n');
    return new Prompt('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', 
    city.getSamsanBuilding('–†—ã–Ω–æ–∫', 'titles'),
    city.getSamsanBuilding('–†—ã–Ω–æ–∫', 'values'),
    city.getSamsanBuilding('–†—ã–Ω–æ–∫', 'descriptions'));
  },

  engineeringActions: () => {
      console.log('–í—ã –∑–∞—à–ª–∏ –≤ —Ü–µ–Ω—Ç—Ä –ë–ò–û–∏–Ω–∂–µ–Ω–µ—Ä–∏–∏.\n');
      return new Prompt('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ', 
      city.getSamsanBuilding('–ë–ò–û–∏–Ω–∂–µ–Ω–µ—Ä–∏—è', 'titles'),
      city.getSamsanBuilding('–ë–ò–û–∏–Ω–∂–µ–Ω–µ—Ä–∏—è', 'values'),
      city.getSamsanBuilding('–ë–ò–û–∏–Ω–∂–µ–Ω–µ—Ä–∏—è', 'descriptions'));
  },

  samsanBattleActions: () => {
    console.log('–í—ã –≤—ã—à–ª–∏ –≤ –æ–∫—Ä–∞–∏–Ω—É –≥–æ—Ä–æ–¥–∞.\n');
    return new Prompt('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞–ª—å–Ω–µ–π—à–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ: ',
    city.getSamsanBuilding('–æ–∫—Ä–∞–∏–Ω–∞', 'titles'),
    city.getSamsanBuilding('–æ–∫—Ä–∞–∏–Ω–∞', 'values'),
    city.getSamsanBuilding('–æ–∫—Ä–∞–∏–Ω–∞', 'descriptions'));
  },
};

